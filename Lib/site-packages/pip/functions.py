import math
from matrix_maker import MatrixMaker
from itertools import islice
main1 = MatrixMaker()
main2 = MatrixMaker()
matrix1 = []
matrix2 = []
class Functions:
    def __init__(self):
        pass
    def aesthetics(self):
        a = "\n" * 2
        main1.matrix_maker(matrix1)
        self.m1 = main1.eles
        print(a)
        print(5 * a)
        main2.matrix_maker(matrix2)
        self.m2 = main2.eles
        print(a)
        self.main_lst = [matrix1, matrix2]
        return self.main_lst
    def aesthetics2(self):
        self.scalar = float(input("Enter the value of scalar: "))
        a = "\n" * 2
        main1.matrix_maker(matrix1)
        self.m1 = main1.eles
        print(a)
    def addition(self, a_list, m1, m2):
        for k in range(len(m1) // 2):
            a_list.append([])
        for i in range(len(m1)//2):
            for j in range(len(m1)//2):
                a = matrix1[i][j] + matrix2[i][j]
                a_list[i].append(a)
                a = 0
        row = len(matrix1)
        column = len(matrix1[0])
        print("matrix is -> ")
        for i in range(0, row):
            for j in range(0, column):
                print(a_list[i][j], end="\t")
            print()
    def subtraction(self, a_list, m1, m2):
        for k in range(len(m1) // 2):
            a_list.append([])
        for i in range(len(m1)//2):
            for j in range(len(m1)//2):
                a = matrix1[i][j] - matrix2[i][j]
                a_list[i].append(a)
                a = 0
        row = len(matrix1)
        column = len(matrix1[0])
        print("matrix is -> ")
        for i in range(0, row):
            for j in range(0, column):
                print(a_list[i][j], end="\t")
            print()
    def Scalar_multiply(self, scalar, m1, a_list):
        for k in range(len(m1) // 2):
            a_list.append([])
        for i in range(len(m1)//2):
            for j in range(len(m1)//2):
                a = matrix1[i][j] * scalar
                b = math.ceil(math.modf(a)[0])
                if b == 0:
                    a = int(a)
                else:
                    pass
                a_list[i].append(a)
                a = 0
        row = len(matrix1)
        column = len(matrix1[0])
        print("matrix is -> ")
        for i in range(0, row):
            for j in range(0, column):
                print(a_list[i][j], end="\t \t")
            print()
    def transpose(self, lst2, main_lst):
        x = 0
        if x != len(lst2):
            for i in range(len(lst2[0])):
                lst = []
                for j in range(len(lst2)):
                    lst.append(lst2[j][x])
                main_lst.append(lst)
                x += 1
            return main_lst
    def Multiplication(self, lst1, lst2, a_lst):
        def lst_multiplication(l1, l2):
            a = 0
            var = 0
            for i in range(len(l1)):
                a += l1[i] * l2[i]
            var = a
            return var
        x = 0
        ele = []
        for k in range(len(matrix2)):
            for l in range(len(matrix2[0])):
                a_lst.append(lst_multiplication(lst1[x], lst2[l]))
            x += 1
        return a_lst
    def output_sorter(self, lst2, s_lst):
        m = len(lst2[0])
        lst = []
        if m % 2 == 0:
            for i in range(m):
                lst.append(m)
        else:
            for i in range(m - 1):
                lst.append(m)
        Inputt = iter(s_lst)
        Output = [list(islice(Inputt, elem))
                  for elem in lst]
        row = len(Output)
        column = len(Output[0])
        print("matrix is -> ")
        for i in range(0, row):
            for j in range(0, column):
                print(Output[i][j], end="\t")
            print()