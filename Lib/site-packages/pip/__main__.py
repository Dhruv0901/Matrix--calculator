from Choice_maker import Choice_Maker
from functions import Functions

Sum = []
diff = []
s_mult = []
mult = []
lst = []
trans = []
fun = Functions
choice = Choice_Maker
end = False
while not end:
    a = choice.choice(self=choice)
    if a == "Add":
        fun.aesthetics(self=fun)
        if choice.checker(self=choice, mat1=fun.main_lst[0], mat2=fun.main_lst[1]) == True:
            fun.addition(self=fun, a_list=Sum, m1=fun.m1, m2=fun.m2)
            fun.csv_storer(self=fun, m1=fun.main_lst[0], m2=fun.main_lst[1], oper="        +", res=Sum)
        else:
            print("Sorry but your matrices don't have same order.")
    elif a == "Sub":
        fun.aesthetics(self=fun)
        if choice.checker(self=choice, mat1=fun.main_lst[0], mat2=fun.main_lst[1]) == True:
            fun.subtraction(self=fun, a_list=diff, m1=fun.m1, m2=fun.m2)
            fun.csv_storer(self=fun, m1=fun.main_lst[0], m2=fun.main_lst[1], oper="        -", res=diff)
        else:
            print("Sorry but your matrices don't have same order.")
    elif a == "S Multiply":
        fun.aesthetics2(self=fun)
        fun.Scalar_multiply(self=fun, scalar=fun.scalar, m1=fun.m1, a_list=s_mult)
        fun.csv_storer_for_scalar_multiply(self=fun, m1=fun.main_lst, sclr=fun.scalar, res=s_mult)
    elif a == "Multiply":
        fun.aesthetics(self=fun)
        if choice.checker2(self=choice, mat1=fun.main_lst[0], mat2=fun.main_lst[1]) == True:
            b = fun.transpose(self=fun, lst2=fun.main_lst[1], main_lst=trans)
            c = fun.Multiplication(self=fun, lst1=fun.main_lst[0], lst2=b, a_lst=lst)
            fun.output_sorter(self=fun, lst1=fun.main_lst[0], lst2=fun.main_lst[1], s_lst=c)
            fun.csv_storer_for_multiply(self=fun, m1=fun.main_lst[0], m2=fun.main_lst[1], res=lst)
        else:
            print("please note that your column no of matrix 1 should be equal to the row no of matrix 2.")
    elif a == "show":
        fun.csv_data_show(self=fun)
    elif a == "end":
        end = True