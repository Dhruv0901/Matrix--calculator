from Choice_maker import Choice_Maker
from functions import Functions
from matrix_maker import MatrixMaker


choice = Choice_Maker
end = False
choice.ascii_printer(self=choice)
while not end:
    a = choice.choice(self=choice)
    main1 = MatrixMaker()
    main2 = MatrixMaker()
    Sum = []
    diff = []
    s_mult = []
    mult = []
    lst = []
    trans = []
    fun = Functions(main1, main2)
    if a == "Add":
        fun.aesthetics()
        if choice.checker(self=choice, mat1=fun.main_lst[0], mat2=fun.main_lst[1]) == True:
            fun.addition(a_list=Sum)
            fun.csv_storer(m1=fun.main_lst[0], m2=fun.main_lst[1], oper="        +", res=Sum)
        else:
            print("Sorry but your matrices don't have same order.")
    elif a == "Sub":
        fun.aesthetics()
        if choice.checker(self=choice, mat1=fun.main_lst[0], mat2=fun.main_lst[1]) == True:
            fun.subtraction(a_list=diff)
            fun.csv_storer(m1=fun.main_lst[0], m2=fun.main_lst[1], oper="        -", res=diff)
        else:
            print("Sorry but your matrices don't have same order.")
    elif a == "S Multiply":
        fun.aesthetics2()
        fun.Scalar_multiply(scalar=fun.scalar, a_list=s_mult)
        fun.csv_storer_for_scalar_multiply(m1=fun.main_lst, sclr=fun.scalar, res=s_mult)
    elif a == "Multiply":
        fun.aesthetics()
        if choice.checker2(self=choice, mat1=fun.main_lst[0], mat2=fun.main_lst[1]) == True:
            b = fun.transpose(lst2=fun.main_lst[1], main_lst=trans)
            c = fun.Multiplication(lst1=fun.main_lst[0], lst2=b, a_lst=lst)
            d = fun.output_sorter(lst1=fun.main_lst[0], lst2=fun.main_lst[1], s_lst=c)
            fun.csv_storer_for_multiply(m1=fun.main_lst[0], m2=fun.main_lst[1], res=d)
        else:
            print("please note that your column no of matrix 1 should be equal to the row no of matrix 2.")
    elif a == "show":
        fun.csv_data_show()
    elif a == "end":
        end = True